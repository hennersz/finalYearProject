\documentclass[10pt, a4paper]{article}
\usepackage{hyperref}
\usepackage{blindtext}
\usepackage{enumitem}

\begin{document}

\title{Interim Report}
\author{Henry Mortimer}
\date{January 2017}
\maketitle

\section{Introduction}
A public key infrastructure (PKI) is a system designed to create, manage, distribute and authorise certificates for cryptographic public keys.\@ There are currently two predominant approches to designing a PKI.

\paragraph{Certificate Authorities}
A certificate authority based system uses hierarchical approach where certain trusted entities are designated as certificate authorities (CA) who can verify the identity of a user (Alice) then issue a certificate attesting to this. A seperate user (Bob) can then verify the identity of Alice if the certificate is signed by a CA Bob trusts or a CA Bob trusts has deligated authority to the CA who signed Alces certificate. 

\paragraph{Web of Trust}
A web of trust opts for a more decentralised approach. Any user in the system can create certificates for any other user in the system. If a user Alice wants to verify the identity of a user Bob and Alice has a certificate for Bob signed by Charlie if Alice trusts Charlie to identify users then Alice trusts the identity of Bob.

\paragraph{Problems}
There are problems with both of these approches. With certificate authorities there is a single point of faliure in the system. If a certificate authorities private key is compromised by an attacker then they are able to issue certificates as if they are the certificate authority enabling them to impersonate the identity of anyone to people who trust the comprimised CA.

\paragraph{} 
In a web of trust users can be faced with the problem of new users to the system to be able to get enough other users to endorse their identity as authentic. This leaves them unable to participate in the system as no other users will trust their public key. 

\paragraph{Solution}
My proposed solution is a hybrid of these two systems. A certificate authority will be a well known entity that many users will trust. Users can request the CA to issue a certificate in the same way as normal. Similarly users can create certificates attesting to the identity of other users. 
\paragraph{}
The system will be backed by a distributed hash table (DHT) which will be used to store and retreive certificates and public keys. Every application using the system will also be a node in the DHT\@. As the responsibility of storing and locating data is distributed amongst the nodes gives good fault tolerance and scalability properties. Whenever a user or a CA creates a certificate it will be stored in the DHT.
\paragraph{}
Each user will have two lists of public keys they trust. One of CAs and another of users they trust to verify the identiy of other users. When verifying the identity of a public key the system will retreive all certificates for the key and first see if any where issued by another trusted user before trying to form a certificate chain to a CA.

\section{Completed Work}
\subsection{Design}
I have designed the system to be fairly modular. The DHT is responsible simply for storing and retrieving values indexed by keys. It makes no effort to parse the data retrieved from the network, this is left to other modules. Then there are two modules concerning keys and certificates. Each will have a local storage mechanism and will be able to insert and retrieve data from the DHT and parse the data from the DHT into python objects. One module will verify the identity of a public key and can use the key and certificate modules to retrieve data as needed. Finally there will be a control module which listends locally on a socket so other applications can use the system to verify the identities of public keys.  
\subsection{Dev Ops}
Due to the nature of distributed systems to adequately test and evaluate one you need multiple machines. To overcome this I have a virtual machine image I can clone so I have as many nodes as I need. I also have an ansible script to automatically download and install the project and dependencies on all the VMs. The code is all under version control at \url{https://github.com/hennersz/finalYearProject}. The project is being implemented python and I have setup the prject to use the python packaging system so the project and dependencies can be easily installed by others.
\subsection{Implementation}
So far I have implemented the DHT using a python library for kademlia. I have created my own storage module for the DHT such that if more than one item is inserted with the same key a list of values are stored for that key rather than overwriting the old value. This allows multiple certificates to be stored for one public key for example. I have then created a wrapper around the DHT server object that sets up the connection and autmatically deserialses the data extracted from the DHT. 
\subsection{Testing}
For testing I am using the pytest library. I have written unit tests for the modules completed so far. I use tox to manage running the tests and handling the python virtual environment.
\section{Remaining Work}
\subsection{Implementation}
\subsubsection{Certificate Module}
\begin{itemize}[noitemsep]
  \item Create certificates
  \item Insert certificates
  \item Retrieve and parse certificates
\end{itemize}
\subsubsection{Key Module}
\begin{itemize}[noitemsep]
  \item Create keys
  \item Insert keys
  \item Retrieve and parse keys
\end{itemize}
\subsubsection{Verification Module}
\begin{itemize}[noitemsep]
  \item Find key identities
  \item Verify a specific identity for a Key
  \item Verify using web of trust
  \item Retrieve and verify certificate chain
\end{itemize}
\subsubsection{Control Module}
\begin{itemize}[noitemsep]
  \item Local socket listening for connections
  \item Syntax for commands
  \item Interface to verification and key modules
\end{itemize}
\subsection{Evaluation}
To evaluate the project I am going to test both the performance and security of the system. For the performance evaluation I will test the time it takes to verfiy the identity of a key on local networks and across the internet, identify any bottlenecks an suggest ways to improve it. For the security evaluation I will assess the feasability and potential damage of attacks on the system such as if attackers control nodes in the DHT.

\end{document}
